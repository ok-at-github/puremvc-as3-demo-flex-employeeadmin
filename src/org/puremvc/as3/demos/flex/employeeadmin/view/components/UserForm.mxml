<?xml version="1.0" encoding="utf-8"?>
<js:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:js="library://ns.apache.org/flexjs/express">

	<fx:Script>
		<![CDATA[
			import org.puremvc.as3.demos.flex.employeeadmin.model.vo.UserVO;
			import org.puremvc.as3.demos.flex.employeeadmin.model.enum.DeptEnum;

			public static const ADD:String 			= "add";
			public static const UPDATE:String 		= "update";
			public static const CANCEL:String 		= "cancel";

			public static const MODE_ADD:String 	= "modeAdd";
			public static const MODE_EDIT:String 	= "modeEdit";
			
			[Bindable] public var user:UserVO;
			[Bindable] public var mode:String;
			
			// submit the add or update
			private function submit( ):void
			{
				/* ToDo
				user = new UserVO( username.text, 
					  			   first.text, 
								   last.text, 
								   email.text, 
								   password.text,
								   DeptEnum( department.selectedItem )
								 );
								 */
				
				if ( user.isValid ) {
					if ( mode == MODE_ADD ) {
						dispatchEvent( new Event( ADD ) );
					} else {
						dispatchEvent( new Event( UPDATE ) );
					}
				}
				
			}
			
			
			public function setUser( user:UserVO, mode:String ):void
			{
				this.user = user;
				this.mode = mode;
				// ToDo first.setFocus();
			}
			
			public function reset():void
			{
				user = null;
				/* ToDo
				username.text = "";
				first.text = "";
				last.text = "";
				email.text = ""; 
				password.text = ""; 
				confirm.text = ""; 
				department.selectedItem = DeptEnum.NONE_SELECTED;
				*/
			}
			
			// cancel the add or update
			private function cancel( ):void
			{
				dispatchEvent( new Event( CANCEL ) );
			}
			
			// enable submit button if required fields are satisfied
			private function enableSubmit( u:String, p:String, c:String, d:DeptEnum ):Boolean
			{
				return ( u != "" && p != '' && p == c && d != DeptEnum.NONE_SELECTED );
			}
		]]>
	</fx:Script>


</js:Group>